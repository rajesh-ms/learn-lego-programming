{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.28.1.47646",
      "templateHash": "5235106258752735333"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "metadata": {
        "description": "Name of the environment that can be used as part of naming resource convention"
      }
    },
    "location": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Primary location for all resources"
      }
    },
    "nodeEnv": {
      "type": "string",
      "defaultValue": "production",
      "metadata": {
        "description": "Node.js environment (development/production)"
      }
    },
    "port": {
      "type": "string",
      "defaultValue": "3000",
      "metadata": {
        "description": "Port for the application"
      }
    }
  },
  "variables": {
    "$fxv#0": {
      "managedIdentityUserAssignedIdentities": "id-",
      "operationalInsightsWorkspaces": "log-",
      "insightsComponents": "appi-",
      "keyVaultVaults": "kv-",
      "containerRegistryRegistries": "cr",
      "appManagedEnvironments": "cae-",
      "appContainerApps": "ca-",
      "networkVirtualNetworks": "vnet-",
      "networkPublicIPAddresses": "pip-",
      "networkApplicationGateways": "agw-",
      "networkNetworkSecurityGroups": "nsg-"
    },
    "abbrs": "[variables('$fxv#0')]",
    "resourceToken": "[toLower(uniqueString(subscription().id, resourceGroup().id, parameters('environmentName')))]",
    "tags": {
      "azd-env-name": "[parameters('environmentName')]"
    },
    "vnetAddressPrefix": "10.0.0.0/16",
    "containerAppSubnetAddressPrefix": "10.0.1.0/24",
    "appGatewaySubnetAddressPrefix": "10.0.2.0/24",
    "privateEndpointSubnetAddressPrefix": "10.0.3.0/24"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[format('{0}{1}', variables('abbrs').managedIdentityUserAssignedIdentities, variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]"
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-04-01",
      "name": "[format('{0}{1}', variables('abbrs').networkVirtualNetworks, variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "container-app-subnet",
            "properties": {
              "addressPrefix": "[variables('containerAppSubnetAddressPrefix')]",
              "delegations": [
                {
                  "name": "Microsoft.App/environments",
                  "properties": {
                    "serviceName": "Microsoft.App/environments"
                  }
                }
              ]
            }
          },
          {
            "name": "app-gateway-subnet",
            "properties": {
              "addressPrefix": "[variables('appGatewaySubnetAddressPrefix')]"
            }
          },
          {
            "name": "private-endpoint-subnet",
            "properties": {
              "addressPrefix": "[variables('privateEndpointSubnetAddressPrefix')]",
              "privateEndpointNetworkPolicies": "Disabled"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-04-01",
      "name": "[format('{0}{1}', variables('abbrs').networkPublicIPAddresses, variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[format('lego-{0}', variables('resourceToken'))]"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[format('{0}{1}', variables('abbrs').operationalInsightsWorkspaces, variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "retentionInDays": 30,
        "sku": {
          "name": "PerGB2018"
        }
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[format('{0}{1}', variables('abbrs').insightsComponents, variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}{1}', variables('abbrs').operationalInsightsWorkspaces, variables('resourceToken')))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}{1}', variables('abbrs').operationalInsightsWorkspaces, variables('resourceToken')))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2022-07-01",
      "name": "[format('{0}{1}', variables('abbrs').keyVaultVaults, variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "accessPolicies": [
          {
            "objectId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}{1}', variables('abbrs').managedIdentityUserAssignedIdentities, variables('resourceToken'))), '2023-01-31').principalId]",
            "tenantId": "[subscription().tenantId]",
            "permissions": {
              "secrets": [
                "get",
                "list"
              ]
            }
          }
        ],
        "enabledForTemplateDeployment": true,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "enableRbacAuthorization": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}{1}', variables('abbrs').managedIdentityUserAssignedIdentities, variables('resourceToken')))]"
      ]
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2023-01-01-preview",
      "name": "[format('{0}{1}', variables('abbrs').containerRegistryRegistries, variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "adminUserEnabled": false,
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', format('{0}{1}', variables('abbrs').containerRegistryRegistries, variables('resourceToken')))]",
      "name": "[guid(resourceId('Microsoft.ContainerRegistry/registries', format('{0}{1}', variables('abbrs').containerRegistryRegistries, variables('resourceToken'))), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}{1}', variables('abbrs').managedIdentityUserAssignedIdentities, variables('resourceToken'))), 'acrPull')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}{1}', variables('abbrs').managedIdentityUserAssignedIdentities, variables('resourceToken'))), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', format('{0}{1}', variables('abbrs').containerRegistryRegistries, variables('resourceToken')))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}{1}', variables('abbrs').managedIdentityUserAssignedIdentities, variables('resourceToken')))]"
      ]
    },
    {
      "type": "Microsoft.App/managedEnvironments",
      "apiVersion": "2024-03-01",
      "name": "[format('{0}{1}', variables('abbrs').appManagedEnvironments, variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "vnetConfiguration": {
          "infrastructureSubnetId": "[reference(resourceId('Microsoft.Network/virtualNetworks', format('{0}{1}', variables('abbrs').networkVirtualNetworks, variables('resourceToken'))), '2023-04-01').subnets[0].id]",
          "internal": true
        },
        "workloadProfiles": [
          {
            "name": "Consumption",
            "workloadProfileType": "Consumption"
          }
        ],
        "appLogsConfiguration": {
          "destination": "log-analytics",
          "logAnalyticsConfiguration": {
            "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', format('{0}{1}', variables('abbrs').operationalInsightsWorkspaces, variables('resourceToken'))), '2022-10-01').customerId]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}{1}', variables('abbrs').operationalInsightsWorkspaces, variables('resourceToken')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}{1}', variables('abbrs').networkVirtualNetworks, variables('resourceToken')))]"
      ]
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2024-03-01",
      "name": "[format('{0}{1}', variables('abbrs').appContainerApps, variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "tags": "[union(variables('tags'), createObject('azd-service-name', 'learn-lego-webapp'))]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}{1}', variables('abbrs').managedIdentityUserAssignedIdentities, variables('resourceToken'))))]": {}
        }
      },
      "properties": {
        "environmentId": "[resourceId('Microsoft.App/managedEnvironments', format('{0}{1}', variables('abbrs').appManagedEnvironments, variables('resourceToken')))]",
        "configuration": {
          "ingress": {
            "external": false,
            "targetPort": 3000,
            "allowInsecure": false,
            "transport": "http"
          },
          "registries": [
            {
              "server": "[reference(resourceId('Microsoft.ContainerRegistry/registries', format('{0}{1}', variables('abbrs').containerRegistryRegistries, variables('resourceToken'))), '2023-01-01-preview').loginServer]",
              "identity": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}{1}', variables('abbrs').managedIdentityUserAssignedIdentities, variables('resourceToken')))]"
            }
          ]
        },
        "template": {
          "containers": [
            {
              "image": "mcr.microsoft.com/azuredocs/containerapps-helloworld:latest",
              "name": "learn-lego-webapp",
              "env": [
                {
                  "name": "NODE_ENV",
                  "value": "[parameters('nodeEnv')]"
                },
                {
                  "name": "PORT",
                  "value": "[parameters('port')]"
                },
                {
                  "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                  "value": "[reference(resourceId('Microsoft.Insights/components', format('{0}{1}', variables('abbrs').insightsComponents, variables('resourceToken'))), '2020-02-02').ConnectionString]"
                }
              ],
              "resources": {
                "cpu": "[json('0.25')]",
                "memory": "0.5Gi"
              }
            }
          ],
          "scale": {
            "minReplicas": 1,
            "maxReplicas": 10,
            "rules": [
              {
                "name": "http-rule",
                "http": {
                  "metadata": {
                    "concurrentRequests": "100"
                  }
                }
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', format('{0}{1}', variables('abbrs').insightsComponents, variables('resourceToken')))]",
        "[resourceId('Microsoft.App/managedEnvironments', format('{0}{1}', variables('abbrs').appManagedEnvironments, variables('resourceToken')))]",
        "[resourceId('Microsoft.ContainerRegistry/registries', format('{0}{1}', variables('abbrs').containerRegistryRegistries, variables('resourceToken')))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}{1}', variables('abbrs').managedIdentityUserAssignedIdentities, variables('resourceToken')))]"
      ]
    },
    {
      "type": "Microsoft.Network/applicationGateways",
      "apiVersion": "2023-04-01",
      "name": "[format('{0}{1}', variables('abbrs').networkApplicationGateways, variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "sku": {
          "name": "WAF_v2",
          "tier": "WAF_v2",
          "capacity": 1
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', format('{0}{1}', variables('abbrs').networkVirtualNetworks, variables('resourceToken'))), '2023-04-01').subnets[1].id]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGatewayFrontendIP",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}{1}', variables('abbrs').networkPublicIPAddresses, variables('resourceToken')))]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "appGatewayFrontendPort80",
            "properties": {
              "port": 80
            }
          },
          {
            "name": "appGatewayFrontendPort443",
            "properties": {
              "port": 443
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "appGatewayBackendPool",
            "properties": {
              "backendAddresses": [
                {
                  "fqdn": "[reference(resourceId('Microsoft.App/containerApps', format('{0}{1}', variables('abbrs').appContainerApps, variables('resourceToken'))), '2024-03-01').configuration.ingress.fqdn]"
                }
              ]
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "appGatewayBackendHttpSettings",
            "properties": {
              "port": 80,
              "protocol": "Http",
              "cookieBasedAffinity": "Disabled",
              "requestTimeout": 20,
              "probe": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/probes', format('{0}{1}', variables('abbrs').networkApplicationGateways, variables('resourceToken')), 'healthProbe')]"
              }
            }
          }
        ],
        "httpListeners": [
          {
            "name": "appGatewayHttpListener",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', format('{0}{1}', variables('abbrs').networkApplicationGateways, variables('resourceToken')), 'appGatewayFrontendIP')]"
              },
              "frontendPort": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', format('{0}{1}', variables('abbrs').networkApplicationGateways, variables('resourceToken')), 'appGatewayFrontendPort80')]"
              },
              "protocol": "Http"
            }
          }
        ],
        "requestRoutingRules": [
          {
            "name": "appGatewayRoutingRule",
            "properties": {
              "ruleType": "Basic",
              "priority": 100,
              "httpListener": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', format('{0}{1}', variables('abbrs').networkApplicationGateways, variables('resourceToken')), 'appGatewayHttpListener')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', format('{0}{1}', variables('abbrs').networkApplicationGateways, variables('resourceToken')), 'appGatewayBackendPool')]"
              },
              "backendHttpSettings": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', format('{0}{1}', variables('abbrs').networkApplicationGateways, variables('resourceToken')), 'appGatewayBackendHttpSettings')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "healthProbe",
            "properties": {
              "protocol": "Http",
              "path": "/",
              "interval": 30,
              "timeout": 30,
              "unhealthyThreshold": 3,
              "pickHostNameFromBackendHttpSettings": true,
              "minServers": 0,
              "match": {
                "statusCodes": [
                  "200-399"
                ]
              }
            }
          }
        ],
        "webApplicationFirewallConfiguration": {
          "enabled": true,
          "firewallMode": "Detection",
          "ruleSetType": "OWASP",
          "ruleSetVersion": "3.2",
          "disabledRuleGroups": [],
          "exclusions": [],
          "requestBodyCheck": true,
          "maxRequestBodySizeInKb": 128,
          "fileUploadLimitInMb": 100
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}{1}', variables('abbrs').networkPublicIPAddresses, variables('resourceToken')))]",
        "[resourceId('Microsoft.App/containerApps', format('{0}{1}', variables('abbrs').appContainerApps, variables('resourceToken')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}{1}', variables('abbrs').networkVirtualNetworks, variables('resourceToken')))]"
      ]
    }
  ],
  "outputs": {
    "AZURE_LOCATION": {
      "type": "string",
      "value": "[parameters('location')]"
    },
    "AZURE_TENANT_ID": {
      "type": "string",
      "value": "[subscription().tenantId]"
    },
    "AZURE_SUBSCRIPTION_ID": {
      "type": "string",
      "value": "[subscription().subscriptionId]"
    },
    "AZURE_RESOURCE_GROUP": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "RESOURCE_GROUP_ID": {
      "type": "string",
      "value": "[resourceGroup().id]"
    },
    "AZURE_CONTAINER_REGISTRY_ENDPOINT": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', format('{0}{1}', variables('abbrs').containerRegistryRegistries, variables('resourceToken'))), '2023-01-01-preview').loginServer]"
    },
    "AZURE_CONTAINER_REGISTRY_NAME": {
      "type": "string",
      "value": "[format('{0}{1}', variables('abbrs').containerRegistryRegistries, variables('resourceToken'))]"
    },
    "AZURE_CONTAINER_APPS_ENVIRONMENT_ID": {
      "type": "string",
      "value": "[resourceId('Microsoft.App/managedEnvironments', format('{0}{1}', variables('abbrs').appManagedEnvironments, variables('resourceToken')))]"
    },
    "AZURE_CONTAINER_APP_NAME": {
      "type": "string",
      "value": "[format('{0}{1}', variables('abbrs').appContainerApps, variables('resourceToken'))]"
    },
    "AZURE_CONTAINER_APP_INTERNAL_URL": {
      "type": "string",
      "value": "[format('https://{0}', reference(resourceId('Microsoft.App/containerApps', format('{0}{1}', variables('abbrs').appContainerApps, variables('resourceToken'))), '2024-03-01').configuration.ingress.fqdn)]"
    },
    "APPLICATION_GATEWAY_PUBLIC_IP": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}{1}', variables('abbrs').networkPublicIPAddresses, variables('resourceToken'))), '2023-04-01').ipAddress]"
    },
    "APPLICATION_GATEWAY_FQDN": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}{1}', variables('abbrs').networkPublicIPAddresses, variables('resourceToken'))), '2023-04-01').dnsSettings.fqdn]"
    },
    "WEB_URI": {
      "type": "string",
      "value": "[format('http://{0}', reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}{1}', variables('abbrs').networkPublicIPAddresses, variables('resourceToken'))), '2023-04-01').dnsSettings.fqdn)]"
    },
    "VNET_ID": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}{1}', variables('abbrs').networkVirtualNetworks, variables('resourceToken')))]"
    },
    "VNET_NAME": {
      "type": "string",
      "value": "[format('{0}{1}', variables('abbrs').networkVirtualNetworks, variables('resourceToken'))]"
    },
    "AZURE_KEY_VAULT_ENDPOINT": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.KeyVault/vaults', format('{0}{1}', variables('abbrs').keyVaultVaults, variables('resourceToken'))), '2022-07-01').vaultUri]"
    },
    "AZURE_KEY_VAULT_NAME": {
      "type": "string",
      "value": "[format('{0}{1}', variables('abbrs').keyVaultVaults, variables('resourceToken'))]"
    },
    "APPLICATION_INSIGHTS_CONNECTION_STRING": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', format('{0}{1}', variables('abbrs').insightsComponents, variables('resourceToken'))), '2020-02-02').ConnectionString]"
    },
    "APPLICATION_INSIGHTS_NAME": {
      "type": "string",
      "value": "[format('{0}{1}', variables('abbrs').insightsComponents, variables('resourceToken'))]"
    },
    "LOG_ANALYTICS_WORKSPACE_ID": {
      "type": "string",
      "value": "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}{1}', variables('abbrs').operationalInsightsWorkspaces, variables('resourceToken')))]"
    },
    "LOG_ANALYTICS_WORKSPACE_NAME": {
      "type": "string",
      "value": "[format('{0}{1}', variables('abbrs').operationalInsightsWorkspaces, variables('resourceToken'))]"
    }
  }
}